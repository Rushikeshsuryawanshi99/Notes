What is Continuous Integration?>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Continuous Integration (CI) is a DevOps software development practice that enables the developers 
to merge their code changes in the central repository. That way, automated builds and tests can be run.
The amendments by the developers are validated by creating a built and running an automated test against them. 
In the case of Continuous Integration, a tremendous amount of emphasis is placed on testing automation to 
check on the application. This is to know if it is broken whenever new commits are integrated into the main branch.

What is Continuous Delivery?>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Continuous Delivery (CD) is a DevOps practice that refers to the building, testing, and delivering improvements
to the software code. The phase is referred to as the extension of the Continuous Integration phase to make sure
that new changes can be released to the customers quickly in a substantial manner. 

This can be simplified as, though you have automated testing, the release process is also automated, and any 
deployment can occur at any time with just one click of a button.

Continuous Delivery gives you the power to decide whether to make the releases daily, weekly,
or whenever the business requires it. The maximum benefits of Continuous Delivery can only be yielded 
if they release small batches, which are easy to troubleshoot if any glitch occurs.

What is Continuous Deployment?>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

When the step of Continuous Delivery is extended, it results in the phase of Continuous Deployment.
Continuous Deployment (CD) is the final stage in the pipeline that refers to the automatic releasing 
of any developer changes from the repository to the production. 

Continuous Deployment ensures that any change that passes through the stages of production is released to the end-users.
There is absolutely no way other than any failure in the test that may stop the deployment of new changes to the output. 
This step is a great way to speed up the feedback loop with customers and is free from human intervention. 

Difference between web server and application server:
Web Server >>>>>>                                                           Application server>>>

Web server encompasses web container only.                            While application server encompasses Web container as well as EJB container.
Web server is useful or fitted for static content.                    Whereas application server is fitted for dynamic content. 
Web server consumes or utilizes less resources.                       While application server utilize more resources.
We	In web servers, multithreading is supported.b servers             While application servers arrange the run environment for enterprises applications.
arrange the run environment for web applications.                     While in application server, multithreading is not supported.
Web server’s capacity is lower than application server.               While application server’s capacity is higher than web server.
In web server, HTML and HTTP protocols are used.                      Processes that are resource-intensive  are supported.
Web Server examples are Apache HTTP Server , Nginx.                   Application Servers example are JBoss , Glassfish.

Virtualization in Cloud Computing

Virtualization is the "creation of a virtual (rather than actual) version of something,
such as a server, a desktop, a storage device, an operating system or network resources".

In other words, Virtualization is a technique, which allows to share a single physical
instance of a resource or an application among multiple customers and organizations.
It does by assigning a logical name to a physical storage and providing a pointer to
that physical resource when demanded.


