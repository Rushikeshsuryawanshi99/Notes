What is jenkins
Jenkins is an open source automation server.
It helps automate the parts of software development related
to building, testing, and deploying, facilitating continuous integration and continuous delivery. 
It is a server-based system that runs in servlet containers such as Apache Tomcat.
========================================================================================================
What is Continuous Integration?

Continuous Integration (CI) is a DevOps software development practice that enables the developers 
to merge their code changes in the central repository. That way, automated builds and tests can be run.
The amendments by the developers are validated by creating a built and running an automated test against them. 
In the case of Continuous Integration, a tremendous amount of emphasis is placed on testing automation to 
check on the application. This is to know if it is broken whenever new commits are integrated into the main branch.
===================================================================================================================================================

What is Continuous Delivery?

Continuous Delivery (CD) is a DevOps practice that refers to the building, testing, and delivering improvements
to the software code. The phase is referred to as the extension of the Continuous Integration phase to make sure
that new changes can be released to the customers quickly in a substantial manner. 

This can be simplified as, though you have automated testing, the release process is also automated, and any 
deployment can occur at any time with just one click of a button.

Continuous Delivery gives you the power to decide whether to make the releases daily, weekly,
or whenever the business requires it. The maximum benefits of Continuous Delivery can only be yielded 
if they release small batches, which are easy to troubleshoot if any glitch occurs.
==========================================================================================================================================

What is Continuous Deployment?

When the step of Continuous Delivery is extended, it results in the phase of Continuous Deployment.
Continuous Deployment (CD) is the final stage in the pipeline that refers to the automatic releasing 
of any developer changes from the repository to the production. 

Continuous Deployment ensures that any change that passes through the stages of production is released to the end-users.
There is absolutely no way other than any failure in the test that may stop the deployment of new changes to the output. 
This step is a great way to speed up the feedback loop with customers and is free from human intervention. 
==========================================================================================================================================
Installation of Jenkins

prerequirestics :- ec2 machine with port 8080 enable on it take ssh and do the following steps

Step 1:-  jenkins run on java so install java first
sudo apt update
$ sudo apt install openjdk-11-jre

step2"-  installed from the debian-stable apt repository.
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee \
  /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update
sudo apt-get install jenkins
step 3:- start jenkins service
sudo systemctl enable jenkins
sudo systemctl start jenkins
sudo systemctl status jenkins

step4:- Browse to http://localhost:8080 or http://public ip:8080

step5:- sudo cat /var/lib/jenkins/secrets/initialAdminPassword will print the password at console.
On the Unlock Jenkins page, paste this password into the Administrator password field and click Continue.

step6:-Install suggested plugins - to install the recommended set of plugins, which are based on most common use cases.

step7 :- 

When the Create First Admin User page appears, specify the details for your administrator user in the respective fields and click Save and Finish.

When the Jenkins is ready page appears, click Start using Jenkins.
=============================================================================================================================================


Jenkins can store the following types of credentials:

    Secret text - a token such as an API token (e.g. a GitHub personal access token),

    Username and password - which could be handled as separate components or as a colon separated string in the format username:password (read more about this in Handling credentials),

    Secret file - which is essentially secret content in a file,

    SSH Username with private key - an SSH public/private key pair,

    Certificate - a PKCS#12 certificate file and optional password, or

    Docker Host Certificate Authentication credentials.
=============================================================================================================================================
Declarative Pipeline fundamentals

In Declarative Pipeline syntax, the pipeline block defines all the work done throughout your entire Pipeline.
Jenkinsfile (Declarative Pipeline)

pipeline {
    agent any 
    stages {
        stage('Build') { 
            steps {
                // 
            }
        }
        stage('Test') { 
            steps {
                // 
            }
        }
        stage('Deploy') { 
            steps {
                // 
            }
        }
    }
}

	Execute this Pipeline or any of its stages, on any available agent.
	Defines the "Build" stage.
	Perform some steps related to the "Build" stage.
	Defines the "Test" stage.
	Perform some steps related to the "Test" stage.
	Defines the "Deploy" stage.
	Perform some steps related to the "Deploy" stage.
  =================================================================================================
  In Scripted Pipeline syntax, one or more node blocks do the core work throughout the entire Pipeline. 
  
Jenkinsfile (Scripted Pipeline)

node {  
    stage('Build') { 
        // 
    }
    stage('Test') { 
        // 
    }
    stage('Deploy') { 
        // 
    }
}

	Execute this Pipeline or any of its stages, on any available agent.
	Defines the "Build" stage. stage blocks are optional in Scripted Pipeline syntax. However, implementing stage blocks in a Scripted Pipeline provides clearer visualization of each `stageâ€™s subset of tasks/steps in the Jenkins UI.
	Perform some steps related to the "Build" stage.
	Defines the "Test" stage.
	Perform some steps related to the "Test" stage.
	Defines the "Deploy" stage.
	Perform some steps related to the "Deploy" stage.
  ==================================================================================================
Creating a Jenkinsfile

As discussed in the Defining a Pipeline in SCM, a Jenkinsfile is a text file that contains the definition of a Jenkins Pipeline and is checked into source control. Consider the following Pipeline which implements a basic three-stage continuous delivery pipeline.
Jenkinsfile (Declarative Pipeline)

pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building..'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}

==============================================================================================================

